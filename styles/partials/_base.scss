// Hamburger
// ==================================================
.hamburger {
  padding: $hamburgerPaddingY $hamburgerPaddingX;
  display: none;
  cursor: pointer;
  color: $primaryColour;
  transition-property: opacity, filter;
  transition-duration: 0.15s;
  transition-timing-function: linear;
  // Normalize (<button>)
  font: inherit;
  color: inherit;
  text-transform: none;
  background-color: transparent;
  border: 0;
  margin: 0;
  overflow: visible;

  &:hover {
    @if $hamburgerHoverUseFilter == true {
      filter: $hamburgerHoverFilter;
    }
    @else {
      opacity: $hamburgerHoverOpacity;
    }
  }

  &.isActive {
    position: absolute;
    background: $secondaryColour;
    top: 0;
    right: 0;
    padding-top: 25px;
    &:hover {
      @if $hamburgerHoverUseFilter == true {
        filter: $hamburgerActiveHoverFilter;
      }
      @else {
        opacity: $hamburgerActiveHoverOpacity;
      }
    }

    .hamburgerInner,
    .hamburgerInner::before,
    .hamburgerInner::after {
      background-color: $hamburgerActiveLayerColor;
    }
  }
}

.hamburgerBox {
  width: $hamburgerLayerWidth;
  height: $hamburgerLayerHeight * 3 + $hamburgerLayerSpacing * 2;
  display: inline-block;
  position: relative;
}

.hamburgerInner {
  display: block;
  top: 50%;
  margin-top: $hamburgerLayerHeight / -2;

  &,
  &::before,
  &::after {
    width: $hamburgerLayerWidth;
    height: $hamburgerLayerHeight;
    background-color: $hamburgerLayerColor;
    border-radius: $hamburgerLayerBorderRadius;
    position: absolute;
    transition-property: transform;
    transition-duration: 0.15s;
    transition-timing-function: ease;
  }

  &::before,
  &::after {
    content: "";
    display: block;
  }

  &::before {
    top: ($hamburgerLayerSpacing + $hamburgerLayerHeight) * -1;
  }

  &::after {
    bottom: ($hamburgerLayerSpacing + $hamburgerLayerHeight) * -1;
  }
}
